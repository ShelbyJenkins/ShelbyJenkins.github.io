---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SEO } from "astro-seo";
import { FAVICON_TYPE, FAVICON_URL, SITE_TITLE, FULL_NAME, GITHUB_PAGES_URL} from '../siteConfig';
import { getImage } from 'astro:assets';
import defaultSocialImage from '../images/default-social-image.png';
/**
 * Enforce some standard canonical URL formatting across the site.
 */
const canonicalURL = formatCanonicalURL(new URL(Astro.url.pathname, GITHUB_PAGES_URL));
function formatCanonicalURL(url: string | URL) {
    let path = url.toString();
    const hasQueryParams = path.includes("?");

    // If there are query params, make sure the URL has no trailing slash
    if (hasQueryParams) {
        path = path.replace(/\/?$/, "");
    } else {
        // Otherwise, canonical URL always has a trailing slash
        path = path.replace(/\/?$/, "/");
    }
    return path;
}

const {page_title, page_description, heroImage, heroAlt, pubDate, updatedDate} = Astro.props;

const socialImage = await (async () => {
    let image; 

    if (heroImage) {
        image = await getImage({ src: heroImage, format: 'webp' });
    } else {
        image = await getImage({ src: defaultSocialImage, format: 'webp' });
    }
	const fullImage = new URL(image.src, GITHUB_PAGES_URL).toString();
	return { src: fullImage, alt: heroAlt };
})();

// See https://github.com/jonasmerlin/astro-seo
---
<html  lang="en">
	<head>
    	<SEO
			title={page_title && `${page_title}`}
			titleTemplate={`%s â€” ${SITE_TITLE}`}
			titleDefault={SITE_TITLE}
			description={page_description}
			canonical={canonicalURL}
			charset="utf-8"
			openGraph={{
				basic: {
					title: page_title || SITE_TITLE,
					type: "website",
					image: socialImage.src,
					url: canonicalURL,
				},
				optional: {
					description: page_description,
					siteName: SITE_TITLE,
				},
				image: {
					alt: socialImage.alt,
				},
				article: {
					publishedTime: pubDate,
					modifiedTime: updatedDate,
					authors: [FULL_NAME]
				}
			}}
			extend={{
				// extending the default link tags
				link: [{ rel: "icon", type: FAVICON_TYPE, href: FAVICON_URL }],
			}}
		/>
  	</head>
</html>

