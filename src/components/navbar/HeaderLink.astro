---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...rest } = Astro.props;

const { pathname } = Astro.url;

let isActive: boolean;
let underlineWeight: string;
let underlineOffset: string;

if (className && className.includes('text-sub')) {
	underlineWeight = 'decoration-2';
	underlineOffset = 'underline-offset-1';
	isActive = pathname === href;
} else {
	underlineWeight = 'decoration-4';
	underlineOffset = 'underline-offset-6';
	isActive = pathname === href || pathname.startsWith(`${href}/`);
}

const underline = isActive ? 'underline' : 'no-underline';
const underlineColor = 'decoration-semantic-primary';
const bold = isActive ? 'font-bold' : 'md:font-medium';
---

<a href={href} class:list={[className, underlineWeight, underlineOffset, bold, underline, underlineColor]} {...rest}>
	<slot />
</a>
<style>
	a:hover {
		color: theme(colors.semantic.secondary);
	}
</style>
