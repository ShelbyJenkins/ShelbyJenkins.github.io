---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import { getReadingTime } from '../../utils/readingTime';
import { formatDescription } from '../../utils/abbreviateDescription';

const posts = (await getCollection('blog')).sort((a, b) => {
    // Use updatedDate if available, otherwise fall back to pubDate
    const dateA = a.data.updatedDate ? new Date(a.data.updatedDate) : new Date(a.data.pubDate);
    const dateB = b.data.updatedDate ? new Date(b.data.updatedDate) : new Date(b.data.pubDate);
    // Sort in descending order (newest first)
    return dateB.valueOf() - dateA.valueOf();
});
const heroImage = posts.length > 0 ? posts[0].data.heroImage : undefined;
const heroAlt = posts.length > 0 ? posts[0].data.heroAlt : undefined;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} page_description={SITE_DESCRIPTION} heroImage={heroImage} heroAlt={heroAlt}/>
		<style>	
			a:hover h1 {
				color: var(--accent);
			}
			a:hover img {
				box-shadow: var(--box-shadow);
			}

		</style>
	</head>
	<body>
		<Header />
		<main class="justify-start">
			<ul class="flex flex-col items-center gap-4 list-none">
				{
					posts.map((post) => {
						const filename = post.slug.split('/').pop();
						return (
							<li >
								<a class="h-80 flex justify-between items-center no-underline" href={`/blog/${filename}/`}style="color: var(--heading-color);">
									<div class="flex flex-col shrink-0 w-8/12 max-h-full pr-4">
										<div class="pb-1 text-2xl lg:text-xl">
											<FormattedDate date={post.data.updatedDate ? new Date(post.data.updatedDate) : new Date(post.data.pubDate)} />
										</div>
										<h1 class="pb-1 text-4xl">{post.data.title}</h1>
										<div class="pb-0 text-3xl lg:text-2xl line-clamp-3 lg:line-clamp-4">{formatDescription(post.data.description, post.body)}</div>
										<div class="pt-1 text-2xl lg:text-xl italic">{getReadingTime(post.body)}</div>
									</div>
									<div class="flex justify-center items-center w-4/12 h-full">
										{
											post.data.heroImage &&
											<Image class="h-auto w-auto" style="max-width: 90%; max-height: 90%;" src={post.data.heroImage} alt={post.data.heroAlt || ''} />
										}
									</div>
								</a>
							</li>
							<hr />
						);
					})
				}
			</ul>
		</main>
		<Footer />
	</body>	
</html>
